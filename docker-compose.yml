version: '3.8'

services:
  # Kafka + Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"


  kafka:
    image: confluentinc/cp-kafka:7.0.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"

  # ClickHouse
  clickhouse:
    image: clickhouse/clickhouse-server:23.3
    ports:
      - "8123:8123"  # HTTP API
      - "9000:9000"  # Native protocol
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  # Redis
  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning

  # OpenTelemetry (Jaeger)
  jaeger:
    image: jaegertracing/all-in-one:1.35
    ports:
      - "16686:16686"  # UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP

  # Prometheus + Grafana
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:9.4.7
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  server:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["./server"]
    depends_on:
      - kafka
      - clickhouse

  consumer:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["./consumer"]
    depends_on:
      - kafka
volumes:
  clickhouse_data: